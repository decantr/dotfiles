#!/bin/sh
#
# boomer to zoomer
#
# a very low iq way to make edits to the LARBS
# files from github.com/lukesmithxyz/voidrice
#

if [ -d voidrice ] ; then
	cd voidrice || exit 1
	echo "::  Updating"
	git clean -dxfq
	git fetch -q --progress
	git reset -q --hard origin/master
else
	git clone https://github.com/LukeSmithxyz/voidrice.git 1> /dev/null &&
		echo "::  Cloned repo"
	cd voidrice || exit 1
fi

printf "::  Use \"i3\" or \"dwm\" [i/D]: "
read -r REPLY
if [ "$REPLY" = "" ] || echo "$REPLY" | grep -qwE "^[Dd]$"; then
       echo "::  Setting up dwm"
       wm=dwm
elif echo "$REPLY" | grep -qwE "^[Ii]$"; then
       echo "::  Setting up i3"
       wm=i3
else echo "::  Invalid" && exit 1
fi

printf "::  Is this display HiDPi [y/N] "
read -r REPLY
if [ "$REPLY" = "" ] || echo "$REPLY" | grep -qwE "^[Nn]$"; then
	hidpi=false
elif echo "$REPLY" | grep -qvwE "^[Yy]$"; then
	echo ::  Invalid && exit 1;
fi

# copy files in
cp ../bin/* .local/bin/
cp ../.Xdefaults .
echo "::  Backing up newsboat urls"
cp ~/.config/newsboat/urls ..
cp ../urls .config/newsboat/
#[ -f ../wall.png ] && cp ../wall.png .config/

# remove bloat
rm README.md LICENSE

# perform hidpi changes
if $hidpi ; then
	sed -i '/dunst/a xrandr --output eDP-1 --dpi 192' .xprofile
	sed -i 's/350x5-0+24/700-0+48/' .config/dunst/dunstrc
	sed -i '3s/^/export GDK_SCALE=2\n/' .profile
else
	sed -i '/unclutter/a xrandr --output DP-0 --mode 2560x1440 --rate 144' .xprofile
fi

echo "export _JAVA_AWT_WM_NONREPARENTING=1" >> .profile

# aliases
sed -i '/yt=/d' .config/aliasrc
#echo "vf() { fzf | xargs -r -I % \$EDITOR % ;}" >> .config/aliasrc
aliases="# My aliases
alias \
	ytsquint='mpv --really-quiet -ytdl-format=43/worst' \\
	yt=\"youtube-dl --add-metadata -i -f 'bestvideo[vcodec*=avc1][height=720]+bestaudio/22' -o '%(upload_date)s-%(title)s.%(ext)s'\" \\
	ytwatch='mpv --really-quiet -ytdl-format=18/best[height=480]/22/135' \\
	ytlisten='mpv --really-quiet -ytdl-format=171/250/bestaudio' \\
	steam='steam -no-browser -silent' \\
	wgon='sudo wg-quick up wg0 && notify-send \"Wireguard Activated\"' \\
	wgoff='sudo wg-quick down wg0 && notify-send \"Wireguard Deactivated\"' \\
	song='youtube-dl -i -f bestaudio -x --audio-format=mp3 --audio-quality 0 --embed-thumbnail -o \"~/Downloads/music/%(uploader)s - %(title)s.%(ext)s\"' \\
	ident='echo \$(curl -s ident.me)' \\
	p='sudo pacman' \\
	SS='sudo systemctl' \\
	bat='cat /sys/class/power_supply/BAT0/capacity' \\
	songplay=\"mpv --no-audio-dispaly\" \\
	ccat=\"highlight --out-format=ansi\" \\
	history=\"history 1\" \\
	dc=\"docker-compose\" \\
	dcr=\"docker-compose run --rm\" \\
"
echo "$aliases" >> .config/aliasrc

# set dwm specific changes
[ -d .local/share/larbs/ ] || mkdir -p .local/share/larbs
echo "$wm" > .local/share/larbs/wm

# i3 changes
sed -i 's/15/5/' .config/i3/config
sed -i 's/15/0/' .config/i3/config
sed -i '/Welcome to LARBS/d' .config/i3/config
# tree dependant changes
sed -i "s/pic-/Pictures\/Screenshots\/pic-/" .local/bin/maimpick
sed -i "s/transmission-remote-cli/tremc/" .local/bin/torwrap
# tree dependant changes
sed -i "s/transmission-remote-cli/tremc/" .local/bin/torwrap
sed -i "s/pic-/Pictures\/Screenshots\/pic-/" .local/bin/maimpick
# void to arch changes
# PERSONAL
sed -i "{
s/lf/vifm/
s/brave/qutebrowser/
}" .profile
patch -f -sp0 < ../patches/lmc-player.patch
patch -f -sp0 < ../patches/lmc-volume.patch
patch -f -sp0 < ../patches/newsboat.patch
patch -f -sp0 < ../patches/keybinds.patch
sed -i "s/-A zzz/systemctl suspend/" .config/sxhkd/sxhkdrc
sed -i "s/wpa_cli/sudo -A nmtui/" .config/sxhkd/sxhkdrc
printf "\nF2\n\tflick\n" >> .config/sxhkd/sxhkdrc

# ranger
sed -i "/set draw_borders/a set draw_borders separators/" .config/ranger/rc.conf

# ncmpcpp
sed -i '/^#user_/ {s/^.//;s/classic/alternative/}' .config/ncmpcpp/config

# keybinds
sed -i 's/td-toggle/$TERMINAL -e nctelegram/' .config/sxhkd/sxhkdrc

# profile
sed -i 's/mpd/pgrep mpd >\/dev\/null || mpd/' .profile

# xprofile
#sed -i 's/xcompmgr/#xcompmgr/' .xprofile
sed -i '{
	s/caps:super/caps:escape_shifted_capslock/
	s/setxkbmap/setxkbmap -layout gb/
}' .local/bin/remaps
sed -i '{
	/unclutter/a xrdb ~\/.Xdefaults &
  /xrandr/a sxhkd -m 1 &           # Bind keys with sxhkd
}' .xprofile

# vimrc
sed -i "/call plug#end()/i\
\" My Additions\n\
Plug '/usr/bin/fzf'\n\
Plug 'airblade/vim-gitgutter'\n\
Plug 'andymass/vim-matchup'\n\
Plug 'dense-analysis/ale'\n\
Plug 'junegunn/fzf.vim'\n\
Plug 'junegunn/limelight.vim'\n\
Plug 'junegunn/rainbow_parentheses.vim'\n\
Plug 'junegunn/vim-easy-align'\n\
Plug 'junegunn/seoul256.vim'\n\
Plug 'qpkorr/vim-bufkill'\n\
Plug 'sheerun/vim-polyglot'\n\
Plug 'vim-vdebug/vdebug'\n\
Plug 'tpope/vim-fugitive'\n\
Plug 'phpactor/phpactor', { 'for': 'php', 'do': 'composer install' }\n\
Plug 'phpstan/vim-phpstan'\n\
" .config/nvim/init.vim

sed -i "{
	/vimling/d
	/goyo_width/d
	s/en_us/en_gb/
	/clipboard/a set ts = 2
	/clipboard/a set sw = 2
	/clipboard/a set tw = 80
	/clipboard/a set noexpandtab
	/clipboard/a let g:goyo_width = 84
	/clipboard/a let g:seoul256_background = 233\ncolo seoul256
}" .config/nvim/init.vim

echo '
" Navigating with guides
	inoremap <leader><leader> <Esc>/<++><Enter>"_c4l
	vnoremap <leader><leader> <Esc>/<++><Enter>"_c4l
	map <leader><leader> <Esc>/<++><Enter>"_c4l

"""HTML
	autocmd FileType html inoremap ,b <b></b><Space><++><Esc>FbT>i
	autocmd FileType html inoremap ,it <em></em><Space><++><Esc>FeT>i
	autocmd FileType html inoremap ,1 <h1></h1><Enter><Enter><++><Esc>2kf<i
	autocmd FileType html inoremap ,2 <h2></h2><Enter><Enter><++><Esc>2kf<i
	autocmd FileType html inoremap ,3 <h3></h3><Enter><Enter><++><Esc>2kf<i
	autocmd FileType html inoremap ,p <p></p><Enter><Enter><++><Esc>02kf>a
	autocmd FileType html inoremap ,a <a<Space>href=""><++></a><Space><++><Esc>14hi
	autocmd FileType html inoremap ,e <a<Space>target="_blank"<Space>href=""><++></a><Space><++><Esc>14hi
	autocmd FileType html inoremap ,ul <ul><Enter><li></li><Enter></ul><Enter><Enter><++><Esc>03kf<i
	autocmd FileType html inoremap ,li <Esc>o<li></li><Esc>F>a
	autocmd FileType html inoremap ,ol <ol><Enter><li></li><Enter></ol><Enter><Enter><++><Esc>03kf<i
	autocmd FileType html inoremap ,im <img src="" alt="<++>"><++><esc>Fcf"a
	autocmd FileType html inoremap ,td <td></td><++><Esc>Fdcit
	autocmd FileType html inoremap ,tr <tr></tr><Enter><++><Esc>kf<i
	autocmd FileType html inoremap ,th <th></th><++><Esc>Fhcit
	autocmd FileType html inoremap ,tab <table><Enter></table><Esc>O
	autocmd FileType html inoremap ,gr <font color="green"></font><Esc>F>a
	autocmd FileType html inoremap ,rd <font color="red"></font><Esc>F>a
	autocmd FileType html inoremap ,yl <font color="yellow"></font><Esc>F>a
	autocmd FileType html inoremap ,dt <dt></dt><Enter><dd><++></dd><Enter><++><esc>2kcit
	autocmd FileType html inoremap ,dl <dl><Enter><Enter></dl><enter><enter><++><esc>3kcc
	autocmd FileType html inoremap ,sp <span></span><++><esc>F>a
	autocmd FileType html inoremap ,di <div><Enter><Enter></div><Enter><++><esc>2kcc
	autocmd FileType html inoremap &<space> &amp;<space>

""" groff
	" Word Count
	autocmd FileType groff map <leader>w :w !watchwc <c-r>%<CR>
	" Code snippets
	autocmd FileType groff inoremap ,b <Enter>.B ""<Enter><++><Esc>ka
	autocmd FileType groff inoremap ,i <Enter>.I ""<Enter><++><Esc>ka
	autocmd FileType groff inoremap ,cw <Enter>.CW ""<Enter><++><Esc>kf"a
	autocmd FileType groff inoremap ,li <Enter>.IP \[bu]<Enter>
	autocmd FileType groff inoremap ,gli <Enter>.RS<Enter>.RS<Enter>.IP \[bu]<Enter>.RE<Enter>.RE<Esc>2kA<Enter>
	autocmd FileType groff inoremap ,gcode <Enter>.CW<Enter>.TS<Enter>box centre;<Enter>l.<Enter>.SM<Enter>$<Enter>.TE<Enter>.R<Enter>.REF "<++>"<Enter><++><Esc>4kA

""" Refer
	inoremap ,gref <Enter>%K <Enter>%O <++><Enter>%D <++><Enter>%I <++><Enter>%A <++><Enter>%T <++><Enter><Esc>6kA

""" Limelight
	let g:limelight_conceal_ctermfg = "darkgray"
	map <leader>l :Limelight!!<CR>

""" README rice
	autocmd BufReadPost README set filetype=markdown

" FZF (replaces Ctrl-P, FuzzyFinder and Command-T)
set rtp+=/usr/local/opt/fzf
set rtp+=~/.fzf
nmap ; :Buffers<CR>
nmap <Leader>r :Tags<CR>
nmap <Leader>t :Files<CR>
nmap <Leader>a :Rg!<CR>
let $FZF_DEFAULT_COMMAND = "rg --files --follow -g \"!{.git,node_modules}/*\" 2>/dev/null"
command! -bang -nargs=* Rg
  \ call fzf#vim#grep(
  \   "rg --column --line-number --no-heading --color=always --smart-case -g \"!{*.lock,*-lock.json}\" ".shellescape(<q-args>), 1,
  \   <bang>0 ? fzf#vim#with_preview(\"up:40%\")
  \           : fzf#vim#with_preview(\"right:50%:hidden\", \"?\"),
  \   <bang>0)

nmap <leader>g :GitGutterToggle<CR>
nmap ]g :GitGutterNextHunk<CR>
nmap [g :GitGutterPrevHunk<CR>
augroup VimDiff
  autocmd!
  autocmd VimEnter,FilterWritePre * if &diff | GitGutterDisable | endif
augroup END

" ALE
let g:ale_sign_warning = "▲"
let g:ale_sign_error = "✗"
highlight link ALEWarningSign String
highlight link ALEErrorSign Title
nmap ]w :ALENextWrap<CR>
nmap [w :ALEPreviousWrap<CR>
nmap <Leader>F <Plug>(ale_fix)
augroup VimDiff
  autocmd!
  autocmd VimEnter,FilterWritePre * if &diff | ALEDisable | endif
augroup END

let g:ale_fixers = {
\	"javascript": ["prettier"],
\	"html": ["prettier"],
\	"xml": ["xmllint"],
\	"sql": ["sqlformat"],
\	"php": ["phpstan"],
\}

let g:vdebug_options = {'break_on_open': 0}

" filetypes
au FileType php,blade setl sw=4 ts=4 et

" tag generate
map <leader>m :!generate-tags<CR>
' >> .config/nvim/init.vim

mkdir -p .config/git
sed "s/NAME/$NAME/;s/EMAIL/$EMAIL/;s/KEY/$KEY/" < ../gitconfig > .config/git/config

# END OF CONFIG

git add .
git commit -qam "!! Install point !!"

# print out unstaged changes
gh="git --work-tree=$HOME --git-dir=.git"
ch=$($gh status -s --untracked-files=no)
if [ "$ch" != "" ]; then
	# prompt to show
	$gh status -s --untracked-files=no
	printf "::  NOTE: + represents YOUR changes which will be overwritten\n"
	printf "::  Do you want view local changes? [y/N] "
	read -r REPLY
	if echo "$REPLY" | grep -qwE "^[Yy]$"; then
		$gh diff
	fi
fi

# prompt to install
printf "::  Do you want to deploy these changes to the home folder? [y/N] "
read -r REPLY
if echo "$REPLY" | grep -qwE "^[Yy]$"; then
	rsync -a --exclude '.git' . ~
fi

# prompt for changes to system
printf "::  Do you want to edit the current system? [y/N] "
read -r REPLY
if [ "$REPLY" = "" ] || echo "$REPLY" | grep -qwE "^[Nn]$"; then
	exit 0;
fi

# copy mouse and touchpad settings
sudo cp -n ../xorg.conf.d/* /etc/X11/xorg.conf.d/

# vconsole changes
[ -f /etc/vconsole.conf ] || sudo touch /etc/vconsole.conf
( grep -q "KEYMAP" /etc/vconsole.conf ) ||
	sudo sh -c 'echo "KEYMAP=i386/qwerty/uk.map.gz" >> /etc/vconsole.conf'
( grep -q "FONT" /etc/vconsole.conf ) ||
	sudo sh -c 'echo "FONT=ter-116n" >> /etc/vconsole.conf'
$hidpi && sudo sed -i 's/ter-116n/ter-132n/' /etc/vconsole.conf

