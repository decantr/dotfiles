#!/bin/sh
#
# boomer to zoomer
#
# a very low iq way to make edits to the LARBS
# files from github.com/lukesmithxyz/voidrice
#

# TODO : remove rsync dep
if ! command -v rsync >/dev/null
then
	printf "::  error must have rsync installed"
	exit 1
fi

[ -f .env ] && . ./.env

if [ -d voidrice ] ; then
	cd voidrice || exit 1
	echo "::  Updating voidrice"
	git clean -dxfq
	git fetch -q --progress
	git reset -q --hard origin/master
else
	git clone https://github.com/LukeSmithxyz/voidrice.git 1> /dev/null &&
		echo "::  Cloned repo"
	cd voidrice || exit 1
fi

printf "::  Is this display HiDPi [y/N] "
read -r REPLY
if [ "$REPLY" = "" ] || echo "$REPLY" | grep -qwE "^[Nn]$"; then
	hidpi=false
elif echo "$REPLY" | grep -qvwE "^[Yy]$"; then
	echo ::  Invalid && exit 1;
fi

# copy files in
cp ../bin/* .local/bin/
cp ../Xresources .config

echo "::  Backing up newsboat urls"
cp ~/.config/newsboat/urls.bak ..
if [ -f ../urls ]
then
	cp ../urls .config/newsboat/
else
	cp ../urls.bak .config/newsboat/
fi

rm .local/share/bg
[ -f ../wall.png ] && cp ../wall.png .local/share/bg

# remove bloat
rm README.md LICENSE FUNDING.yml

SCALE=1
OUT="DP-1 --rate 144 --size 2560x1440 --pos 2560x0 --rotate normal --output HDMI-1 --primary --size 2560x1440 --pos 0x0  --rotate normal"
COLOR="red"

# perform hidpi changes
if $hidpi ; then
	SCALE=2
	OUT="eDP-1 --dpi 192"
	COLOR="blue"
	sed -i 's/350x5-0+24/700-0+48/' .config/dunst/dunstrc
fi

# install composer1
command -v composer1 >/dev/null || \
 sudo curl -L "https://getcomposer.org/composer-1.phar" -o "/usr/bin/composer1" && \
 sudo chmod +x "/usr/bin/composer1"

# aliases
sed -i "
/cp=/d
/mv=/d
/rm=/d
/xbps/d
" .config/shell/aliasrc

echo "# My aliases
alias \\
	wgon=\"sudo wg-quick up wg0 && notify-send Wireguard Activated\" \\
	wgoff=\"sudo wg-quick down wg0 && notify-send Wireguard Deactivated\" \\
	bat=\"cat /sys/class/power_supply/BAT0/capacity\" \\
	SS=\"sudo systemctl\" \\
	history=\"history 1\"

# dev
alias \\
	dc=\"docker-compose\" \\
	dcr=\"docker-compose run --rm\" \\
	pa=\"php artisan\" \\
	pat=\"php artisan tinker\" \\
	p1a=\"php71 artisan\" \\
	p1at=\"php71 artisan tinker\" \\
	p2a=\"php72 artisan\" \\
	p2at=\"php72 artisan tinker\" \\
	p2atx=\"php72 -dxdebug.remote_autostart=1 artisan tinker\" \\
	p2c=\"php72 \$(which composer1)\" \\
	p3a=\"php73 artisan\" \\
	p3at=\"php73 artisan tinker\" \\
	p4a=\"php7 artisan\" \\
	p4at=\"php7 artisan tinker\" \\
" >> .config/shell/aliasrc

# PERSONAL
# global exports
sed -i "
	/MOZ_USE_XINPUT2/a export _JAVA_AWT_WM_NONREPARENTING=1
	/MOZ_USE_XINPUT2/a export GDK_SCALE=$SCALE
	/ PATH/a export PATH=\"$HOME/.local/node_modules/bin:\$PATH\"
	/ANSIBLE/a export npm_config_prefix=\"~/.local/node_modules/\"
	s/mpd/pgrep mpd >\/dev\/null || mpd/
	/BROWSER/a export READER=\"zathura\"
" .zprofile

# default display settings
sed -i "
	s/^#xrdb/xrdb/
	s/xcompmgr/picom/
	/picom/ s/^/# /
	/unclutter/a xrandr --output $OUT &
" .xprofile

# fix screenshot location
sed -i "s/pic-/pic\/ss\/pic-/" .local/bin/maimpick

# patches
patch -f -sp0 < ../patches/displayselect.patch

# ncmpcpp
sed -i '/^#user_/ {s/^.//;s/classic/alternative/}' .config/ncmpcpp/config

sed -i '{
	s/caps:super/caps:escape_shifted_capslock/
	s/setxkbmap/setxkbmap -layout gb/
}' .local/bin/remaps

# vimrc
cp ../config/nvim/init.vim .config/nvim

mkdir -p .config/git
cp ../config/git/config .config/git/config

# include fzf and change ps1
sed -i "
/be last/i source ~\/.local\/src\/fzf.git\/.fzf.zsh\n
s/PS1=.*/PS1=\"%B%{\$fg[$COLOR]%}%c %{\$reset_color%}>%b \"/
" .config/zsh/.zshrc

sed -i "
s/Joy Pixels/Font Awesome/g
" .config/fontconfig/fonts.conf

sed -i "
s/-then-hibernate//
s/hibernate/suspend/
" .local/bin/sysact

# Mime configs
echo "
x-scheme-handler/msteams=teams.desktop
" >> .config/mimeapps.list
# END OF CONFIG

git add .
git add .vimrc
git commit -qam "!! Install point !!"

# print out unstaged changes
gh="git --work-tree=$HOME --git-dir=.git"
ch=$($gh status -s --untracked-files=no)
if [ "$ch" != "" ]; then
	# prompt to show
	$gh status -s --untracked-files=no
	printf "::  NOTE: + represents YOUR changes which will be overwritten\n"
	printf "::  Do you want view local changes? [y/N] "
	read -r REPLY
	if echo "$REPLY" | grep -qwE "^[Yy]$"; then
		$gh diff
	fi
fi

# prompt to install
printf "::  Do you want to deploy these changes to the home folder? [y/N] "
read -r REPLY
if echo "$REPLY" | grep -qwE "^[Yy]$"; then
	rsync -a --exclude '.git' . ~
fi

# prompt for changes to system
printf "::  Do you want to edit the current system? [y/N] "
read -r REPLY
if [ "$REPLY" = "" ] || echo "$REPLY" | grep -qwE "^[Nn]$"; then
	exit 0;
fi

# copy mouse and touchpad settings
sudo cp -n ../xorg.conf.d/* /etc/X11/xorg.conf.d/

# vconsole changes
[ -f /etc/vconsole.conf ] || sudo touch /etc/vconsole.conf
# add personal keymaps to uk template
#  this map may be gzipped which is accounted for
if [ -f /usr/local/share/kbd/keymaps/personal.map ]
then
	uk="$( cat /usr/share/kbd/keymaps/i386/qwerty/uk.map )"

	[ -f /usr/share/kbd/keymaps/i386/qwerty/uk.map ] && \
		uk="$( gunzip -c /usr/share/kbd/keymaps/i386/qwerty/uk.map.gz )"

	sudo mkdir -p /usr/local/share/kbd/keymaps
	printf "%s\nkeycode   1 = Caps_Lock\nkeycode  58 = Escape\n" "$uk" | \
		sudo tee /usr/local/share/kbd/keymaps/personal.map > /dev/null
fi

( grep -q "KEYMAP" /etc/vconsole.conf ) ||
	sudo sh -c 'echo "KEYMAP=/usr/local/share/kbd/keymaps/personal.map" >> /etc/vconsole.conf'
( grep -q "FONT" /etc/vconsole.conf ) ||
	sudo sh -c 'echo "FONT=ter-116n" >> /etc/vconsole.conf'
$hidpi && sudo sed -i 's/ter-116n/ter-132n/' /etc/vconsole.conf


# Update dependencies
if ! [ -d "../src" ]
then
	mkdir ../src
fi

# shellcheck disable=SC2164 # created above
cd ../src

# dwm
if [ -d dwm ] ; then
	cd dwm || exit 1
	echo "::  Updating dwm"
	git clean -dxfq
	git fetch -q --progress
	git reset -q --hard origin/master
else
	git clone https://github.com/LukeSmithxyz/dwm.git 1> /dev/null &&
		echo "::  Cloned repo"
	cd dwm || exit 1
fi

patch -f -sp0 < ../../patches/dwm-configh.patch
sed -i "s/lmc /mpc /g" config.h
$hidpi && sed -i "/font-awesome/s/15/18/g" config.h

make
sudo make install
cd ..

# dmenu
if [ -d dmenu ] ; then
	cd dmenu || exit 1
	echo "::  Updating dmenu"
	git clean -dxfq
	git fetch -q --progress
	git reset -q --hard origin/master
else
	git clone https://github.com/LukeSmithxyz/dmenu.git 1> /dev/null &&
		echo "::  Cloned repo"
	cd dmenu || exit 1
fi

patch -f -sp0 < ../../patches/dmenu-configh.patch
$hidpi && sed -i "/font-awesome/s/15/18/g" config.h

make
sudo make install
